#+TITLE: Examples and Tests for Elisp Ollama SDK


* Initial Tests

#+begin_src emacs-lisp :session ollamatest
(load-file "./ollama.el")
#+end_src

#+RESULTS:
: t

#+begin_src emacs-lisp

;; Correctly define and encode the json payload
(let ((json-payload '(("model" . "codellama:7b-code"))))
  ;; Print the payload as a string for debugging purposes
  (message "%s" (json-encode json-payload))
  ;; Return the encoded json payload
  (json-encode json-payload))
#+end_src

#+RESULTS:
: {"model":"codellama:7b-code"}


#+begin_src emacs-lisp :session ollamatest
(let ((payload '(("model" . "mistral:latest")
                      ("prompt" . "Why is the sky blue?")
                      ("stream" . :json-false)
                      ("options" . (("num_predict" . 25))))))
  (ollama-send-request "generate" payload 'simple-ollama-process-filter))
#+end_src

#+RESULTS:
: simple-ollama-process-filter
#+begin_src emacs-lisp
(ollama-generate-completion
 "mistral:latest"
 "why is the sky blue?"
 :options '(:num_predict 10))
#+end_src

#+RESULTS:
: ((model . mistral:latest) (created_at . 2024-02-10T20:38:06.174459Z) (response .  The color of the sky appears blue due to a) (done . t) (context . [733 16289 28793 28705 2079 349 272 7212 5045 28804 733 28748 16289 28793 415 3181 302 272 7212 8045 5045 2940 298 264]) (total_duration . 602225083) (load_duration . 3763667) (prompt_eval_count . 15) (prompt_eval_duration . 338273000) (eval_count . 10) (eval_duration . 259223000))

#+begin_src emacs-lisp
(ollama-generate-chat-completion "mistral:latest"
             '((("role" . "system") ("content" . "You are a helpful assistant."))
               (("role" . "user") ("content" . "Can you help me with elisp programming?")))
             :options '((temperature . 0.7) (num_predict . 20))
             :stream :json-false)

#+end_src

#+RESULTS:
: ((model . mistral:latest) (created_at . 2024-02-10T20:41:12.576155Z) (message (role . assistant) (content .  Absolutely, I'd be happy to help you with Emacs Lisp (Elisp))) (done . t) (total_duration . 874975000) (load_duration . 941084) (prompt_eval_count . 8) (prompt_eval_duration . 329604000) (eval_count . 20) (eval_duration . 543293000))

#+begin_src emacs-lisp
(async-ollama-generate-completion
 "mistral:latest"
 "why is the sky blue?"
 :options '(:num_predict 10))

  #+end_src

  #+RESULTS:
  : simple-ollama-process-filter

#+begin_src emacs-lisp
(let ((content
       (with-current-buffer "*simple-ollama-output*"
         ;; Capture the buffer's content.
         (buffer-string))))
  ;; Clear the buffer after capturing its content.
  (with-current-buffer "*simple-ollama-output*"
    (erase-buffer))
  ;; Ensure json-parse-string returns an alist.
  (json-parse-string content :object-type 'alist))
#+end_src

#+RESULTS:
: ((model . mistral:latest) (created_at . 2024-02-10T21:03:19.47873Z) (response .  The color of the sky appears blue due to a) (done . t) (context . [733 16289 28793 28705 2079 349 272 7212 5045 28804 733 28748 16289 28793 415 3181 302 272 7212 8045 5045 2940 298 264]) (total_duration . 411149208) (load_duration . 543125) (prompt_eval_duration . 152069000) (eval_count . 10) (eval_duration . 258121000))


#+begin_src emacs-lisp
(async-ollama-generate-chat-completion "mistral:latest"
             '((("role" . "system") ("content" . "You are a helpful assistant."))
               (("role" . "user") ("content" . "Can you help me with elisp programming?")))
             :options '((temperature . 0.7) (num_predict . 20))
             :stream :json-false)
  #+end_src

  #+RESULTS:
  : simple-ollama-process-filter

#+begin_src emacs-lisp
(let ((content
       (with-current-buffer "*simple-ollama-output*"
         ;; Capture the buffer's content.
         (buffer-string))))
  ;; Clear the buffer after capturing its content.
  (with-current-buffer "*simple-ollama-output*"
    (erase-buffer))
  ;; Ensure json-parse-string returns an alist.
  (json-parse-string content :object-type 'alist))
#+end_src

#+RESULTS:
: ((model . mistral:latest) (created_at . 2024-02-10T21:06:53.752073Z) (message (role . assistant) (content .  Absolutely! Emacs Lisp (Elisp) is the scripting language used by Emacs)) (done . t) (total_duration . 811260916) (load_duration . 1109458) (prompt_eval_count . 19) (prompt_eval_duration . 269978000) (eval_count . 20) (eval_duration . 538766000))
